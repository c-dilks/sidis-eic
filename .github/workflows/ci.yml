name: ci

on:
  pull_request:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:

# build test
  build:
    runs-on: [ ubuntu-latest ]
    container:
      image: cjdilks/largex-eic:dev
      options: --user root
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: config
        run: |
          source env.sh
          echo "MSTWPDF_HOME=${MSTWPDF_HOME}" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MSTWPDF_HOME}" >> $GITHUB_ENV
      - name: compile
        run: make
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            LargexDict_rdict.pcm
            libLargex.so
            mstwpdf/*.o
            mstwpdf/*.so
            src/LargexDict.cxx

# sanitize tests
  sanitize:
    needs: [ build ]
    runs-on: [ ubuntu-latest ]
    container:
      image: cjdilks/largex-eic:dev
      options: --user root
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: config
        run: |
          source env.sh
          echo "MSTWPDF_HOME=${MSTWPDF_HOME}" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MSTWPDF_HOME}" >> $GITHUB_ENV
      - name: asan
        env:
          ASAN_OPTIONS: "detect_leaks=1" # need clang to be able to use `suppressions=${ROOTSYS}/etc/lsan-root.supp`
          #LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libasan.so.4 # should not be needed! (but we currently need this to run a macro)
        run: make asan

# run benchmark macros matrix for fast and full simulation
# - all files in matrix are w.r.t. path macro/ci/
  benchmarks:
    needs: [ build ]
    runs-on: [ ubuntu-latest ]
    container:
      image: cjdilks/largex-eic:dev
      options: --user root
    strategy:
      matrix:
        name: [ bin-test, coverage, resolution, y-minima ]
        mode: [ fastsim, fullsim ]
        include:
          - mode: fastsim
            config: delphes.config
          - mode: fullsim
            config: s3files.config
          - name: bin-test
            amacro: analysis_xq.C
            pmacro: postprocess_bin_test.C
          - name: coverage
            amacro: analysis_xq.C
            pmacro: postprocess_xq.C
          - name: resolution
            amacro: analysis_xq.C
            pmacro: postprocess_xq.C
          - name: y-minima
            amacro: analysis_yRatio.C
            pmacro: postprocess_yRatio.C
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: config
        run: |
          source env.sh
          echo "MSTWPDF_HOME=${MSTWPDF_HOME}" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${MSTWPDF_HOME}" >> $GITHUB_ENV
      - name: get-artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
      - name: analysis
        env:
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        run: root -b -q macro/ci/${{ matrix.amacro }}'("macro/ci/${{ matrix.config }}",10,100,-25,"${{ matrix.name }}.${{ matrix.mode }}")'
      - name: postprocess
        run: root -b -q macro/ci/${{ matrix.pmacro }}'("out/${{ matrix.name }}.${{ matrix.mode }}.root")'
      - name: artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}-${{ matrix.mode }}-plots
          path: out/${{ matrix.name }}.${{ matrix.mode }}.images

# collect artifacts into one directory
  collect:
    if: ${{ always() }}
    needs: [ benchmarks ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: download
        uses: actions/download-artifact@v2
        with:
          path: results
      - name: cull
        run: |
          rm -rv results/build-artifacts
          rm -v results/coverage*/*.pdf
          rm -v results/resolution*/*.pdf
          rm -v results/y-minima*/canv*.png
      - name: organize
        run: macro/ci/organize-artifacts.sh results
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: _FULL_RESULTS
          path: results
